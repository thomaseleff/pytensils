name: Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
    contents: write
      
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create coverage report
      run: |
        if [ ! -d coverage ]; then mkdir coverage; fi
        coverage run -m pytest tests/ --doctest-modules
        coverage report -m --format markdown > ./coverage/COVERAGE.md

    - name: Create coverage badge
      uses: tj-actions/coverage-badge-py@v2

    - name: Move coverage reports
      run: |
        mv coverage.svg ./coverage

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v16
      id: verify-changed-files
      with:
        files: ./coverage/coverage.svg

    - name: Commit coverage badge
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add coverage/coverage.svg
        git add coverage/COVERAGE.md
        git commit -m "Updated coverage"

    - name: Push coverage badge
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.github_token }}
        branch: ${{ github.ref }}